Pedro Gabriel Fonteles Furtado
Younes Bettioui

Video of the application: 
http://dl.dropbox.com/u/25774476/Info6%20Projet%20Application%20working.mp4
HTML files and web structure folder:
https://github.com/Pidroh/IHM/tree/master/NetbeansProject/web/Administrateur_Client
Javascript sources folder:
https://github.com/Pidroh/IHM/tree/master/NetbeansProject/web/Administrateur_Client/js
Server side sources folder:
https://github.com/Pidroh/IHM/tree/master/NetbeansProject/src/java

How to run this application:
You would have to clone the GIT, open the project in Netbeans and then deploy. The interface will not work very well
if the webserver is not accessible. The code doesn't work offline since two libraries are loaded from the web,
JQuery and GoogleMaps.

**************************************************************************************************************
Aministrator HTML files:

parcour.html:
This basically hosts the administrator`s abilites to create and manipulate paths. It allows for editing
every property of a path, drawing the notes of a path in the map and also has functions to go to
other pages where you can modify and create notes.

notecreate.html:
Page to create a new note, allows to insert name, description and to pick a position from the map.

noteedit.html:
Page to edit a new note, allows to modify name, description and position in the map.

**************************************************************************************************************
User HTML files:

client_initial.html:
The initial page of the application. Has a button to start it up and go to client_parcours.html

client_parcour.html:
Contains all of the paths available for the client to choose, with a list of notes of that path.
This HTML appears empty because it is mostly dinamic generated by Javascript.

client_parcour_stat.html:
Contains information on a single path, with a list of notes of that path and information on distance and time.
It also aswell has a map and a route from your current distance to the next note. It also has buttons to advance
in the path, reset the path, recalculate the route (this is used because we don't want to waste too much
battery and network getting the position all the time) and a button to go to client_stats.html. Also heavily
generated by javascript

client_stats.html:
Contains statistiques for the client, total distance and time on every path the client has progressed in. 
Heavily generated by javascript.

**************************************************************************************************************

Javascript files explanation:

Javascript files for backbone and underscore. Jquery and the Google Maps API are loaded at execution time!
Although the file backbone.localStorage.js is included, we do not use it, we use our own way to store things
at localStorage.

backbonedefinitions.js: 
this file contains all the classes for: 
Models (Path, Note and PathsStats),
Collections (Collection of paths, notes and of pathstats),
some reutilisable views (CollecToSelect which binds a collection to an HTML list),
and some utility methods to load collections from the localStorage or from the server.

PathManage.js:
Logic behind parcour.html.

Notesgeolocation.js, client_ps_googlemaps and pathsgooglemaps.js:
This file will interface with the google maps API, create markers and stuff, as necessary.
They will also call APIs to calculate distances and times, draw routes and get adresses.

pathmanage.js:
Logic behind parcour.html

notecreation.js:
Logic behind notecreate.html

noteedit.js:
Logic behind noteedit.html

client_parcour.js:
Logic behind client_parcour.html

client_parcourstat.js:
Logic behind client_parcour_stat.html

client_stat.js:
Logic behind client_stats.html

**************************************************************************************************************
